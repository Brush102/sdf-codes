First i wil be talking about the code that is under the file called student.py. This was a basic class practise. I created a simple enrollment process that asked for thier name, email, place they would like to study. I used the basic software design princaple called KISS (keep it simple stupid). Once you fill out the three feilds of information it enrolls you in the right course with the right school and prints the information back to you. This is a simple yet effective way to use the class funtion to store data. 
This next bit of code called funtions.The software design princeple I have applied here is Single responobility principle. Ive done this by letting every module in the code only concern himself. Every funtion that I use is unique and clean. The perpose of this code was to understand and practise all different types of funtions all with thier own single responibilitys. 
Another bit of code I will give an example for is called Personclass.py. I started with a counter and provided a ticket interface in which constomers could enter their details. I put so much code in the file that it kept coming up with errors so i decided to use the basic software principle called Refactor, Refactor, Refactor. I would work on something else them come back to the code to refine, revist and re-write improving its quaility drasticly. 
The last bit of code i will give an example for is called Ticket. Since this was for my assesment I looked through it multiple times to make sure it was DRY (dont repeat yourself) instead of WET. In a lot of my practise codes I found myself repeating myslef often to try get a hang of wriritng the code so I made sure I didnt carry that thinking into my asessment and checked through it. 
I struggled with learning how to write code. As I arrived a bit late to the course I felt a bit behind and confused for a while. I often found myself lost in class or looking at a screen of code wondering what is going on. The thing that really saved me was the modules on canvas. Whenever I would be confused or overwhelmed I would start from scratch run some basic code and build my skills up till I knew how to write the code and understand it. 
